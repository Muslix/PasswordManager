from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import text

# revision identifiers, used by Alembic.
revision = '7316d177c55d'
down_revision = '60afa00d4080'
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('password_history', sa.Column('category', sa.String(length=255), nullable=True))

    # Updating existing records to store category name instead of category_id
    conn = op.get_bind()
    conn.execute(text("""
        UPDATE password_history
        SET category = (SELECT name FROM category WHERE category.id = password_history.category_id)
    """))

    with op.batch_alter_table('password_history', schema=None) as batch_op:
        batch_op.alter_column('category', nullable=False)
        batch_op.drop_constraint('fk_password_history_category_id', type_='foreignkey')
        batch_op.drop_column('category_id')

    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('password_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('category_id', sa.INTEGER(), nullable=True))
        batch_op.create_foreign_key('fk_password_history_category_id', 'category', ['category_id'], ['id'])
        batch_op.drop_column('category')

    # ### end Alembic commands ###
